package fr.javatronic.damapping.test.implicitemappermethod;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

// GENERATED CODE, DO NOT MODIFY, THIS WILL BE OVERRIDE
public class MultipleImplementationAsEnumMapperFactoryImpl implements MultipleImplementationAsEnumMapperFactory {

    @Override
    public MultipleImplementationAsEnumMapper bigDecimal() {
        return new MultipleImplementationAsEnumMapperImpl(MultipleImplementationAsEnum.bigDecimal());
    }

    @Override
    public MultipleImplementationAsEnumMapper integer() {
        return new MultipleImplementationAsEnumMapperImpl(MultipleImplementationAsEnum.integer());
    }

    @Override
    public MultipleImplementationAsEnumMapper instance(boolean bigDecimal) {
        return new MultipleImplementationAsEnumMapperImpl(MultipleImplementationAsEnum.instance(bigDecimal));
    }

    private static class MultipleImplementationAsEnumMapperImpl implements MultipleImplementationAsEnumMapper {

        private final MultipleImplementationAsEnum instance;

        public MultipleImplementationAsEnumMapperImpl(MultipleImplementationAsEnum instance) {
            this.instance = instance;
        }

        @Override
        @Nonnull
        public Integer apply(@Nullable String input) {
            return instance.apply(input);
        }

    }
}
